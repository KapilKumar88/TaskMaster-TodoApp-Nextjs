generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  COMPLETED
  ACTIVE
  DRAFT
  OVERDUE
}

enum TaskPriority {
  HIGH
  MEDIUM
  LOW
}

model User {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String   @unique
  name         String?
  password     String
  profileImage String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  categories Category[]
  tasks      Task[]
}

model Task {
  id          Int          @id @default(autoincrement())
  title       String
  description String
  priority    TaskPriority @default(MEDIUM)
  dueDate     DateTime
  dueTime     DateTime?
  status      TaskStatus   @default(ACTIVE)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  userId     String @db.Uuid
  categoryId Int

  category Category @relation(fields: [categoryId], references: [id])
  user     User     @relation(fields: [userId], references: [id])
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  color     String
  userId    String   @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tasks Task[]
  user  User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}
