generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  COMPLETED
  ACTIVE
  DRAFT
  OVERDUE
}

enum TaskPriority {
  HIGH
  MEDIUM
  LOW
}

enum WeekStartDay {
  sunday
  monday
  saturday
}

enum TaskTimeFrequency {
  hour
  day
  min
}

enum AppTheme {
  light
  dark
  system
}

model User {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String   @unique
  name         String?
  password     String
  profileImage String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  categories Category[]
  tasks      Task[]
  settings   Settings?
}

model Task {
  id              Int          @id @default(autoincrement())
  title           String
  description     String
  priority        TaskPriority @default(MEDIUM)
  dueDate         DateTime
  dueTime         DateTime?
  markAsImportant Boolean?     @default(false)
  completedOn     DateTime?
  status          TaskStatus   @default(ACTIVE)
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt

  userId     String @db.Uuid
  categoryId Int

  category Category @relation(fields: [categoryId], references: [id])
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  color     String
  userId    String   @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tasks Task[]
  user  User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Settings {
  id     Int    @id @default(autoincrement())
  userId String @unique @db.Uuid

  timeZone                 String
  dateFormat               String
  weekStartDay             WeekStartDay      @default(sunday)
  autoArchive              Boolean           @default(false)
  autoArchiveTime          Int
  autoArchiveTimeFrequency TaskTimeFrequency @default(hour)
  emailNotifications       Boolean           @default(true)
  pushNotification         Boolean           @default(true)
  taskDueReminder          Boolean           @default(true)
  taskDueTime              Int               @default(1)
  taskDueTimeFrequency     TaskTimeFrequency @default(hour)
  weeklySummary            Boolean           @default(false)
  appTheme                 AppTheme          @default(system)
  accentColor              String?
  glassEffectIntensity     Int               @default(50)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
